@inherits Custom.Hybrid.Razor14
@* This inherits statement gets you features like App, CmsContext, Data etc. - you can delete this comment *@
@using ToSic.Sxc.Services; @* Make it easier to use https://r.2sxc.org/services *@

@{
  var exampleDocumentId = AsList(App.Data["Document"]).Where(doc => doc.TutorialId == "about-donald-knuth").First();
  var certificateDocumentId = AsList(App.Data["TokenData"]).Where(doc => doc.TutorialId == "volunteer-certificate-max-muster").First();

  var showIncludeBinaryWarning = false;
  try {
    var verifyPuppeteer = CreateInstance("./Helpers/VerifyPuppeteer.cs");
    showIncludeBinaryWarning = !verifyPuppeteer.HasBinary();
  } catch {
    showIncludeBinaryWarning = true;
  }

  var exampleSite = "https://2sxc.org/en";
  var exampleSitePrint = CmsContext.Site.Url + "/api/2sxc/app/Print/live/api/Pdf/Page?url=" + exampleSite;
  var exampleDocument = CmsContext.Site.Url + "/api/2sxc/app/Print/live/api/Pdf/Document?documentId="+exampleDocumentId.EntityId;
  var exampleCertificate = CmsContext.Site.Url + "/api/2sxc/app/Print/live/api/Pdf/TokenDataDocument?tokenDataId=" + certificateDocumentId.EntityId;
  var exampleViewPrint = CmsContext.Site.Url + "/api/2sxc/app/Print/live/api/Pdf/TutorialPage";

  var appPath = App.Path;
}

<div @Edit.TagToolbar(Content) class="bg-light p-4 rounded-2" style="max-width: 750px;">
  <div class="alert alert-primary">
    Tutorial-Pdf App
  </div>

  @if (showIncludeBinaryWarning) {
    <div class="alert alert-warning">
      <div>
        <strong>Warning: PuppeteerSharp.dll missing</strong>
      </div>
      <div>
        For the print-app to work, you have to include the PuppeteerSharp.dll in the "bin" directory of your project root.
        You can find it in Print/Setup_Files/Puppeteer_Binaries
      </div>
    </div>
  }
  <div class="mb-4">
    After installing the app make sure to:
    <ol>
      <li><strong>Include Puppeteer binaries</strong> from /App-Print/Setup_Files/Puppeteer_Binaries in the "/bin" directory of your project root.</li>
      <li><strong>Add the Print-App Skin</strong> from from /App-Print/Setup_Files/Print_Skin to the "/Portals/_default/Skins" directory.</li>
      <li><strong>Create the generator pages</strong>, add the according app views and apply the print skin 
        <div class="pt-2"><img src="@appPath/assets/GeneratorStructure.png"></div>
      </li>
    </ol>
  </div>
  <h4>
    With this app you can
  </h4>
  <ul class="mb-4">
    <div>‚ùïThe first download will take longer, as we need to install chrome for Puppeteer.</div>
    <li class="mb-2">
      <div>Print any webpage:</div>
      <a href="@exampleSitePrint" target="_blank">@exampleSite</a>
    </li>
    <li class="mb-2">
      <div>Print your views:</div> 
      <a href="@exampleViewPrint" target="_blank">@exampleViewPrint</a>
    </li>
    <li class="mb-2">
      <div>Print professional documents:</div>
      <a href="@exampleDocument" target="_blank">@exampleDocument</a>
    </li>
    <li class="mb-2">
      <div>Make tokenized certificates with backgrounds:</div> 
      <a href="@exampleCertificate" target="_blank">@exampleCertificate</a>
    </li>
  </ul>
  <div class="mb-4">
    <h4 class="mb-2">How it works:</h4>
    <img src="@appPath/assets/AppStructure.png">
  </div>

  @Html.Partial("_Essentials.cshtml")

  <div class="mb-4">
    <h4 class="mb-2">Import into your app:</h4>
    <div>If you want to use the print function in your app, we recommend importing the:</div>
    <ol>
      <li>live/Services/PdfService.cs</li>
      <li>live/Print/Layout</li>
      <li>src/styles/_print.scss</li>
    </ol>
  </div>

  @Html.Partial("_Example-View-Print.cshtml", new { ExampleViewPrint = exampleViewPrint })
  @Html.Partial("_Example-Tokenized-Document.cshtml", new { ExampleCertificate = exampleCertificate })
</div>

@Html.Partial("./shared/_PagePrintView.cshtml")
