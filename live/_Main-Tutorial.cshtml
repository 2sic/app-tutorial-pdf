@inherits Custom.Hybrid.Razor14
@* This inherits statement gets you features like App, CmsContext, Data etc. - you can delete this comment *@
@using ToSic.Sxc.Services; @* Make it easier to use https://r.2sxc.org/services *@

@{
  var appPath = App.Path;
  var printToken = CmsContext.Page.Parameters["token"];

  var pdfService = CreateInstance("./Services/PdfService.cs");
  var isAuthorized = CmsContext.User.IsSiteAdmin || printToken == pdfService.GetToken();

  var exampleDocument = AsList(App.Data["Document"]).Where(doc => doc.TutorialId == "about-donald-knuth").First();
  var certificateDocument = AsList(App.Data["TokenData"]).Where(doc => doc.TutorialId == "volunteer-certificate-max-muster").First();

  var showIncludeBinaryWarning = false;
  try {
    var verifyPuppeteer = CreateInstance("./Helpers/VerifyPuppeteer.cs");
    showIncludeBinaryWarning = !verifyPuppeteer.HasBinary();
  } catch {
    showIncludeBinaryWarning = true;
  }

  var exampleSite = "https://2sxc.org/en";
  var exampleSitePrintUrl = CmsContext.Site.Url + "/api/2sxc/app/Print/live/api/Pdf/Page?url=" + exampleSite;
  var exampleDocumentUrl = CmsContext.Site.Url + "/api/2sxc/app/Print/live/api/Pdf/Document?documentId=" + exampleDocument.EntityId;
  var exampleCertificateUrl = CmsContext.Site.Url + "/api/2sxc/app/Print/live/api/Pdf/TokenDataDocument?tokenDataId=" + certificateDocument.EntityId;
  var exampleViewPrintUrl = CmsContext.Site.Url + "/api/2sxc/app/Print/live/api/Pdf/TutorialPage";
}

@if (!isAuthorized) {
  <div></div>
  return;
}

<div @Edit.TagToolbar(Content) class="bg-light p-4 rounded-2" style="max-width: 750px;">
  <div class="alert alert-primary">
    Tutorial-Pdf App: Visible to Admin only
  </div>
   
  @if (showIncludeBinaryWarning) {
    <div class="alert alert-warning">
      <div>
        <strong>Warning: PuppeteerSharp.dll missing</strong>
      </div>
      <div>
        For the print-app to work, you have to include the PuppeteerSharp.dll in the "bin" directory of your project root.
        You can find it in Print/Setup_Files/Puppeteer_Binaries
      </div>
    </div>
  }

  <h4>
    With this app you can
  </h4>
  <ul class="mb-4">
    <div>‚ùïThe first download will take longer, as we need to install chrome for Puppeteer.</div>
    <li class="mb-2">
      <div>Print any webpage:</div>
      <a href="@exampleSitePrintUrl" target="_blank">@exampleSite</a>
    </li>
    <li class="mb-2">
      <div>Print your views:</div> 
      <a href="@exampleViewPrintUrl" target="_blank">@exampleViewPrintUrl</a>
    </li>
    <li class="mb-2">
      <div>Print professional documents:</div>
      <a href="@exampleDocumentUrl" target="_blank">@exampleDocumentUrl</a>
    </li>
    <li class="mb-2">
      <div>Make tokenized certificates with backgrounds:</div> 
      <a href="@exampleCertificateUrl" target="_blank">@exampleCertificateUrl</a>
    </li>
  </ul>
  
  <div class="border-bottom padding-bottom">
    <div class="btn-group btn-group-toggle" data-toggle="buttons">
      <button type="button" class="btn btn-primary" data-sxc-tutorial-setup-button="@CmsContext.View.Id">Setup Guide</button>
      <button type="button" class="btn btn-dark" data-sxc-tutorial-implementation-button="@CmsContext.View.Id">Implementation Guide</button>
    </div>
  </div>
  <div class="pt-4" data-sxc-tutorial-setup="@CmsContext.View.Id">
    @Html.Partial("_Setup-Guide.cshtml", new { ExampleDocument = exampleDocumentUrl })
  </div>
  <div class="pt-4 d-none" data-sxc-tutorial-implementation="@CmsContext.View.Id">
    @Html.Partial("_Implementation-Guide.cshtml", new { ExampleDocument = exampleDocumentUrl, ExampleCertificate = exampleCertificateUrl, ExampleViewPrint = exampleViewPrintUrl })
  </div>
</div>

<script>
  const setupWrapperButton = document.querySelector("[data-sxc-tutorial-setup-button='@CmsContext.View.Id']")
  const implementationWrapperButton = document.querySelector("[data-sxc-tutorial-implementation-button='@CmsContext.View.Id']")
  const setupWrapper = document.querySelector("[data-sxc-tutorial-setup='@CmsContext.View.Id']")
  const implementationWrapper = document.querySelector("[data-sxc-tutorial-implementation='@CmsContext.View.Id']")

  setupWrapperButton.addEventListener("click", (e) => {
    if (!implementationWrapper.classList.contains("d-none"))
      implementationWrapper.classList.toggle("d-none");

    setupWrapper.classList.remove("d-none");

    implementationWrapperButton.classList.remove("btn-primary")
    if (!implementationWrapperButton.classList.contains("btn-dark"))
      implementationWrapperButton.classList.add("btn-dark")

    setupWrapperButton.classList.remove("btn-dark")
    if (!setupWrapperButton.classList.contains("btn-primary"))
      setupWrapperButton.classList.add("btn-primary")
  });

  implementationWrapperButton.addEventListener("click", (e) => {
    if (!setupWrapper.classList.contains("d-none"))
      setupWrapper.classList.toggle("d-none");

    implementationWrapper.classList.remove("d-none");

    setupWrapperButton.classList.remove("btn-primary")
    if (!setupWrapperButton.classList.contains("btn-dark"))
      setupWrapperButton.classList.add("btn-dark")

    implementationWrapperButton.classList.remove("btn-dark")
    if (!implementationWrapperButton.classList.contains("btn-primary"))
      implementationWrapperButton.classList.add("btn-primary")
  });
</script>

@Html.Partial("./shared/_PagePrintView.cshtml")
